import sys


def main():
    word = sys.stdin.readline()
    word = word[:len(word) - 1]
    global cursor, length, firstIdx  ## cursor - 1 : 자기 현재 cursor의 왼쪽에 위치한 문자의 index를 표시.
    cursor, length = len(word), len(word)
    firstIdx = 0 ## linked list에서 처음으로 시작하는 문자의 index
    linked = []
    for i in range(cursor):
        linked.append([i - 1, word[i], i + 1])
    linked[cursor - 1][2] = None
    linked[0][0] = None
    M = int(sys.stdin.readline())
    for i in range(M):
        command = sys.stdin.readline()
        if command[0] == "L":
            movecursor(linked, "L")
        elif command[0] == "D":
            movecursor(linked, "D")
        elif command[0] == "B":
            linked = backSpace(linked)
        else:
            linked = insert(linked, command[2])

def backSpace(linked):
    global cursor, firstIdx
    if cursor > 0:
        if linked[cursor - 1][0] == None and linked[cursor - 1][2] != None: ## 처음값인데 끝값은 아닌값 삭제
            linked[linked[cursor - 1][2]][0] = None ##
            firstIdx = linked[cursor - 1][2]
        elif linked[cursor - 1][0] != None and linked[cursor - 1][2] != None: ## 처음도 끝값도 아닌값 삭제
            linked[linked[cursor - 1][0]][2] = linked[cursor - 1][2]
            linked[linked[cursor - 1][2]][0] = linked[cursor - 1][0]
        elif linked[cursor - 1][0] != None and linked[cursor - 1][2] == None: ## 처음값 아니고 끝값인값 삭제
            linked[linked[cursor - 1][0]][2] = None
        linked[cursor - 1][0] = None
        linked[cursor - 1][2] = None
    return linked


def movecursor(linked, direction):
    global cursor, firstIdx
    if direction == "L" and cursor > 0:
        if linked[cursor - 1][0] == None:
            cursor = 0
        else:
            cursor = linked[cursor - 1][0] + 1
    if direction == "D":
        if linked[cursor - 1][2] != None:
            cursor = linked[cursor - 1][2] + 1

def insert(linked, add):
    global cursor, firstIdx
    if cursor == 0:
        pre = None
        next = firstIdx
    elif linked[cursor - 1][2] == None: ## 맨 뒤에 삽입할때
        pre = cursor - 1
        next = None
        linked[cursor - 1][2] = cursor
    else:
        pre = cursor - 1
        next = linked[cursor - 1][2]
    linked.append([pre, add, next])
    ## 다 더하고 커서 좌표 어떻게 설정할지 추가...
    return linked


if __name__ == "__main__":
    main()
